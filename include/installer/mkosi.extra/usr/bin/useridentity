#!/usr/bin/sh
set -euf
incdir=/usr/lib
. "${incdir}/lv-verity.inc.sh"

if [ $# -ne 2 ]; then
  printf 'Usage: %s <username> <out>\n' "${0##*/}"
  exit 2
fi

user="$1";shift
out="$1";shift
[ -n "${user}" ] || die 'Missing user name\n'
[ ! -e "${out}" ] || die '"%s" already exists\n' "${out}"

umask 077
tmpdir="$(mktemp -d -t useridentity.XXXXXXXX)"
key="${tmpdir}/${user}.private"
pub="${tmpdir}/${user}.public"
identity="${tmpdir}/${user}.identity"

if ! [ -e "${key}" ]; then
  openssl genpkey -algorithm ed25519 -out "${key}"
  openssl pkey -check -in "${key}" -pubout -out "${pub}"
fi

ssh_keys="$(systemd-creds cat --system "ssh.authorized_keys.${user}" || \
  systemd-creds cat --system "ssh.authorized_keys.root" || \
  printf '%s' 'sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAIHcFzCCr/Y2bjSrFVRY1HcqxPoABKiEl26aiNzA5l4BdAAAACHNzaDpubGdk'
)"

jq --compact-output --join-output --sort-keys \
  --argjson now "$(date +%s)" \
  --arg user "${user}" \
  --arg ssh "${ssh_keys}" \
  '.userName |= $user | .homeDirectory |= "/home/" + $user | .privileged.sshAuthorizedKeys |= ($ssh | split("\n")) | .lastChangeUSec = ($now * 1000000) | .lastPasswordChangeUSec = ($now * 1000000)' \
 > "${identity}" <<"EOF"
{
  "disposition": "regular",
  "memberOf": [
    "wheel"
  ],
  "mountNoDevices" : true,
  "mountNoExecute" : true,
  "mountNoSuid" : true,
  "privileged": {
    "hashedPassword" : [
      "$y$j9T$IKcpQCOfVGuvq9J6/TrC/1$Jb/zLjDrhgK3kfu6tr9n6gDIfM/zddWHLTOC.zMEvk6"
    ]
  },
  "realName": "Temporary provisioning user",
  "shell": "/usr/bin/bash"
}
EOF
pubkey="$(openssl pkey -in "${key}" -pubout)"
signature="$(openssl pkeyutl -sign -inkey "${key}" -rawin -in "${identity}" | base64 --wrap=0)"
jq --tab \
  --arg pubkey "${pubkey}" \
  --arg sigdata "${signature}" \
  '.signature += [{ "data": $sigdata, "key": $pubkey }]' \
  < "${identity}" > "${out}"
shred -zu "${identity}" "${key}" "${pub}"
rmdir "${tmpdir}"
